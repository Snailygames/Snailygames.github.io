var VER="v20220809",isIOS=!!navigator.platform&&/iPad|iPhone|iPod/.test(navigator.platform),isMacOS=!!navigator.platform&&/Mac/.test(navigator.platform);isMacOS&&navigator.maxTouchPoints>2&&(isIOS=!0,isMacOS=!1);var isWebApp=navigator.standalone||!1,isSaveSupported=!0,isSaveNagAppeared=!1;if(isIOS)if(isWebApp)$id("ios-power-hint").hidden=!1;else{isSaveSupported=!1;var divIosHint=$id("ios-hint");divIosHint.hidden=!1,divIosHint.style="position: absolute; bottom: "+divIosHint.clientHeight+"px;",$id("btn-choose-file").hidden=!0}function $id(e){return document.getElementById(e)}isMacOS&&navigator.userAgent.indexOf("Chrome")<0&&($id("mac-warning").hidden=!1);var optScaleMode=0,uiCurrentMode="welcome",plugins={},body=document.getElementsByTagName("body")[0],html=document.getElementsByTagName("html")[0],config={swapTopBottom:!1,swapTopBottomL:!1,powerSave:!0,micWhenR:!0,vkEnabled:!0,muteSound:!1,useDPad:!1,lsLayout:0,turbo:!1,scaleMode:0,fwLang:1},emuUseTimer33=!1;function afterConfigUpdated(){emuUseTimer33=!1,(config.powerSave||config.turbo)&&(emuUseTimer33=!0)}function loadConfig(){var e=JSON.parse(window.localStorage.config||"{}");for(var n in e)config[n]=e[n];$id("power-save").checked=config.powerSave,$id("vk-enabled").checked=config.vkEnabled,$id("cfg-mute-sound").checked=config.muteSound,$id("vk-direction").value=config.useDPad?"1":"0",$id("cfg-turbo").checked=config.turbo,$id("cfg-ls-layout").value=config.lsLayout,$id("cfg-scale-mode").value=config.scaleMode,$id("cfg-lang").value=config.fwLang,afterConfigUpdated(),optScaleMode=config.scaleMode}function uiSaveConfig(){config.powerSave=!!$id("power-save").checked,config.vkEnabled=!!$id("vk-enabled").checked,config.muteSound=!!$id("cfg-mute-sound").checked,config.useDPad=!!parseInt($id("vk-direction").value),config.turbo=!!$id("cfg-turbo").checked,config.lsLayout=parseInt($id("cfg-ls-layout").value),config.scaleMode=parseInt($id("cfg-scale-mode").value),config.fwLang=parseInt($id("cfg-lang").value),window.localStorage.config=JSON.stringify(config),afterConfigUpdated()}function uiMenuBack(){tryInitSound(),uiSaveConfig(),uiSwitchTo(emuIsGameLoaded?"player":"welcome")}function toyEncrypt(e){for(var n=new Uint8Array(e.length),i=0;i<e.length;i++)n[i]=251^e[i];return n}function uiSaveExport(){if(isSaveSupported){if(!confirm("Auto-save is enabled, you DON'T have to export save data manually.\nAfter you saved in the game, wait a few seconds and save data will be stored in the app's local storage automatically.\nTo prevent the data loss caused by accidential deletion of the Home Screen icon or damaged device, you may export the save data to a safe place.\n\nDo you wish to continue?"))return;if("Yes"!==prompt('You HAVE to save in the game before exporting the save data.\n\nPlease enter "Yes" to confirm.'))return}var e=pako.gzip(emuCopySavBuffer()),n=new Blob([e],{type:"application/binary"}),i=document.createElement("a");i.href=window.URL.createObjectURL(n),i.download="sav-"+gameID+".dsz",i.click()}async function uiSaveRestore(){var e=$id("restore-file").files[0];if(e){var n=e.name.split(".").pop().toLowerCase();if({"4dsav":!0,sav:!0,dsv:!0,"4dsaz":!0,dsz:!0}[n]){var i=new Uint8Array(await e.arrayBuffer());if("4dsav"==n&&(i=toyEncrypt(i)),"4dsaz"==n&&(i=pako.ungzip(toyEncrypt(i))),"dsz"==n&&(i=pako.ungzip(i)),"sav"==n){var t=emuCopySavBuffer();if(t.length<=0)return void alert("You have to save in the game at least once, before importing .sav file.");if(i.length>t.length)return void alert("The .sav file is too large.");t.set(i,0),i=t}localforage.setItem("sav-"+gameID,i).then((()=>{alert("Save data updated. \nPlease close and reopen this app."),setTimeout((()=>{location.reload()}),500)}))}else alert("Invalid file extension: "+n)}}loadConfig();var emuKeyState=new Array(14);const emuKeyNames=["right","left","down","up","select","start","b","a","y","x","l","r","debug","lid"];for(var vkMap={},vkState={},keyNameToKeyId={},vkStickPos=[0,0,0,0,0],vkDPadRect={x:0,y:0,w:0,h:0},i=0;i<emuKeyNames.length;i++)keyNameToKeyId[emuKeyNames[i]]=i;var isLandscape=!1;const emuKeyboradMapping=[39,37,40,38,16,13,90,88,65,83,81,87,-1,8];var emuGameID="unknown",emuIsRunning=!1,emuIsGameLoaded=!1,fps=0,divFPS=$id("fps"),fileInput=$id("rom"),romSize=0,FB=[0,0],screenCanvas=[document.getElementById("top"),document.getElementById("bottom")],ctx2d,audioContext,audioBuffer,scriptNode;const audioFifoCap=8192;var audioFifoL=new Int16Array(audioFifoCap),audioFifoR=new Int16Array(audioFifoCap),audioFifoHead=0,audioFifoLen=0,frameCount=0,prevCalcFPSTime=0,touched=0,touchX=0,touchY=0,prevSaveFlag=0,lastTwoFrameTime=10,fbSize;function callPlugin(e,n){for(var i in plugins)plugins[i].handler&&plugins[i].handler(e,n)}function showMsg(e){document.getElementById("msg-text").innerText=e,document.getElementById("msg-layer").hidden=!1,setTimeout((function(){document.getElementById("msg-layer").hidden=!0}),1e3)}function emuRunAudio(){var e=Module._fillAudioBuffer(4096);if(!config.muteSound)for(var n=0;n<e&&!(audioFifoLen>=audioFifoCap);n++){var i=(audioFifoHead+audioFifoLen)%audioFifoCap;audioFifoL[i]=audioBuffer[2*n],audioFifoR[i]=audioBuffer[2*n+1],audioFifoLen++}}function emuRunFrame(){processGamepadInput();for(var e=0,n=0;n<14;n++)emuKeyState[n]&&(e|=1<<n);if(emuKeyState[11]&&(e|=16384),config.turbo)for(n=0;n<2;n++)Module._runFrame(0,e,touched,touchX,touchY),emuRunAudio();else config.powerSave&&(Module._runFrame(0,e,touched,touchX,touchY),emuRunAudio());if(Module._runFrame(1,e,touched,touchX,touchY),emuRunAudio(),optScaleMode<2?(ctx2d[0].putImageData(FB[0],0,0),ctx2d[1].putImageData(FB[1],0,0)):(gpuDraw(screenCanvas[0],FB[0]),gpuDraw(screenCanvas[1],FB[1])),(frameCount+=1)%120==0){var i=performance.now();fps=120/((i-prevCalcFPSTime)/1e3),prevCalcFPSTime=i,divFPS.innerText="fps:"+(""+fps).substring(0,5)}frameCount%30==0&&checkSaveGame()}function wasmReady(){Module._setSampleRate(47856),setTimeout((()=>{if(1!=$id("loading").hidden){$id("loading").hidden=!0,$id("loadrom").hidden=!1;var e=$id("btn-choose-file");e.onclick||(e.onclick=()=>{tryInitSound(),$id("rom").click()})}}),2e3),$id("ver-info").innerText="Ver: "+VER+" ",optScaleMode<2?ctx2d=screenCanvas.map((e=>e.getContext("2d",{alpha:!1}))):gpuInit()}function emuCopySavBuffer(){var e=Module._savGetSize();if(e>0){var n=Module._savGetPointer(0),i=new Uint8Array(e);return i.set(Module.HEAPU8.subarray(n,n+e)),i}return new Uint8Array(0)}function checkSaveGame(){if(isSaveSupported){var e=Module._savUpdateChangeFlag();if(0==e&&1==prevSaveFlag){var n=emuCopySavBuffer();n.length>0&&(localforage.setItem("sav-"+gameID,n),showMsg("Auto saving..."))}prevSaveFlag=e}}async function tryLoadROM(e){if(!e)return;if(e.size<1024)return;var n=new Uint8Array(await e.slice(0,1024).arrayBuffer());gameID="";for(var i=0;i<16;i++)gameID+=0==n[i]?" ":String.fromCharCode(n[i]);"#"==gameID[12]&&(gameID=e.name),console.log("gameID",gameID),romSize=e.size;var t=Module._prepareRomBuffer(romSize);console.log(romSize,t);const o=4194304;for(var a=0;a<romSize;a+=o){var r=await e.slice(a,a+o).arrayBuffer();Module.HEAPU8.set(new Uint8Array(r),t+a)}var d=await localforage.getItem("sav-"+gameID);d&&Module.HEAPU8.set(d,Module._savGetPointer(d.length)),Module._savUpdateChangeFlag(),Module._emuSetOpt(0,config.fwLang);var s=Module._loadROM(romSize);if(0!=s)return msg="LoadROM failed: "+s+"\n",-1001==s&&(msg+="This file is encrypted and not supported for now.\n"),void alert(msg);ptrFrontBuffer=Module._getSymbol(5);var u=Module._getSymbol(4);for(i=0;i<2;i++)FB[i]=new ImageData(new Uint8ClampedArray(Module.HEAPU8.buffer).subarray(u+196608*i,u+196608*(i+1)),256,192);var l=Module._getSymbol(6);audioBuffer=new Int16Array(Module.HEAPU8.buffer).subarray(l/2,l/2+32768),emuIsGameLoaded=!0,callPlugin("loaded",gameID),window.eaRunHook?window.eaRunHook():emuStart()}function emuStart(){emuIsGameLoaded&&(console.log("Start!!!"),emuIsRunning=!0,uiSwitchTo("player"))}function initVK(){for(var e=document.getElementsByClassName("vk"),n=0;n<e.length;n++){var i=e[n],t=e[n].getAttribute("data-k");t&&(vkMap[t]=i,vkState[t]=[0,0])}}function makeVKStyle(e,n,i,t,o){return"top:"+e+"px;left:"+n+"px;width:"+i+"px;height:"+t+"px;font-size:"+o+"px;line-height:"+t+"px;"}function uiAdjustVKLayout(){var e=.14*window.innerWidth,n=.7*e,i=Math.min(fbSize[0][1]+fbSize[1][1],window.innerHeight-Math.ceil(3.62*e)),t=0,o=3*e,a=3*e,r=e,d=e;r=1.5*e,d=.6*e,n=.5*e,vkMap.l.style=makeVKStyle(i,0,r,d,n),vkMap.r.style=makeVKStyle(i,window.innerWidth-r,r,d,n),r=.4*e,d=.4*e,$id("vk-menu").style=makeVKStyle(i,window.innerWidth/2-r/2,r,d,n),i+=.62*e,r=e,d=e,t=window.innerWidth-o,vkMap.a.style=makeVKStyle(i+a/2-d/2,t+o-r,r,d,n),vkMap.b.style=makeVKStyle(i+a-d,t+o/2-r/2,r,d,n),vkMap.x.style=makeVKStyle(i,t+o/2-r/2,r,d,n),vkMap.y.style=makeVKStyle(i+a/2-d/2,t,r,d,n),r=1*e,d=1*e,t=0,$id("vk-stick").style=config.useDPad?"display:none;":makeVKStyle(i+a/2-d/2,t+a/2-r/2,r,d,n),vkStickPos=[i+a/2,t+a/2,r,d,n];var s=o,u=a,l=t,c=i;vkDPadRect={x:l,y:c,width:s,height:u},$id("vk-dpad-1").style=config.useDPad?makeVKStyle(c+u/3,l,s,u/3,n):"display:none;",$id("vk-dpad-2").style=config.useDPad?makeVKStyle(c,l+s/3,s/3,u,n):"display:none;",r=.4*e,d=.4*e,n=.2*e,vkMap.select.style=makeVKStyle(i+a-d,window.innerWidth/2-1.5*r,r,d,n),vkMap.start.style=makeVKStyle(i+a-d,window.innerWidth/2+.5*r,r,d,n)}function maxScreenSize(e,n){var i=e,t=i/256*192;return t>n&&(i=(t=n)/192*256),[i,t]}function setScreenPos(e,n,i,t,o){var a="left:"+n+"px;top:"+i+"px;width:"+t+"px;height:"+o+"px;";if(0==optScaleMode&&(a+="image-rendering:pixelated;"),e.style=a,optScaleMode>=2){var r=window.devicePixelRatio||1;e.width=t*r,e.height=o*r}}function uiUpdateLayout(){if((isLandscape=isScreenLandscape())&&0!=config.lsLayout){if(1==config.lsLayout){n=(e=maxScreenSize(window.innerWidth/2,window.innerHeight))[0],i=e[1],t=0,o=0;fbSize=[[n,i],[n,i]];for(a=0;a<2;a++)setScreenPos(screenCanvas[a],t,o,fbSize[a][0],fbSize[a][1]),t+=n}else if(2==config.lsLayout){n=(e=maxScreenSize(window.innerWidth-256,window.innerHeight))[0],i=e[1],t=0,o=0;fbSize=[[n,i],[256,192]];for(a=0;a<2;a++)setScreenPos(screenCanvas[a],t,o,fbSize[a][0],fbSize[a][1]),t+=n}}else{var e,n=(e=maxScreenSize(window.innerWidth,window.innerHeight/2))[0],i=e[1],t=0;t+=(window.innerWidth-n)/2;var o=0;fbSize=[[n,i],[n,i]];for(var a=0;a<2;a++)setScreenPos(screenCanvas[a],t,o,fbSize[a][0],fbSize[a][1]),o+=i}uiAdjustVKLayout()}function uiSwitchTo(e){if(e!=uiCurrentMode){if(uiCurrentMode=e,$id("welcome").hidden=!0,$id("vk-layer").hidden=!0,$id("menu").hidden=!0,$id("player").hidden=!0,body.style="",html.style="",emuIsRunning=!1,"player"==e){body.style="touch-action: none;",html.style="position: fixed;overflow:hidden;touch-action: none;";for(var n=0;n<14;n++)emuKeyState[n]=!1;config.vkEnabled&&($id("vk-layer").hidden=!1),uiUpdateLayout(),emuIsGameLoaded&&(emuIsRunning=!0),$id("player").hidden=!1}"menu"==e&&($id("player").hidden=!1,$id("menu").hidden=!1,$id("menu-savegame").hidden=!emuIsGameLoaded),"welcome"==e&&($id("welcome").hidden=!1)}}function onScriptNodeAudioProcess(e){var n=e.outputBuffer.getChannelData(0),i=e.outputBuffer.getChannelData(1);if(!config.muteSound)for(var t=0;t<n.length;t++){if(audioFifoLen<=0)return;audioFifoLen--,n[t]=audioFifoL[audioFifoHead]/32768,i[t]=audioFifoR[audioFifoHead]/32768,audioFifoHead=(audioFifoHead+1)%audioFifoCap}}function tryInitSound(){try{if(audioContext)return void("running"!=audioContext.state&&audioContext.resume());audioContext=new(window.AudioContext||window.webkitAudioContext)({latencyHint:1e-4,sampleRate:48e3}),(scriptNode=audioContext.createScriptProcessor(2048,0,2)).onaudioprocess=onScriptNodeAudioProcess,scriptNode.connect(audioContext.destination),audioContext.resume()}catch(e){console.log(e)}}function emuLoop(){window.requestAnimationFrame(emuLoop),emuIsRunning&&!emuUseTimer33&&(prevRunFrameTime=performance.now(),emuRunFrame())}function emuTimer33(){emuIsRunning&&emuUseTimer33&&emuRunFrame()}window.ondragover=function(e){e.preventDefault(),e.dataTransfer.dropEffect="copy"},window.ondrop=function(e){e.preventDefault(),tryLoadROM(e.dataTransfer.files[0])},initVK(),fileInput.onchange=async()=>{var file=fileInput.files[0];if(file){var fileNameLower=file.name.toLowerCase();if(fileNameLower.endsWith(".json")){var obj=JSON.parse(await file.text()),pluginName=obj.name||"unknown";return plugins[pluginName]=obj,obj.js&&(plugins[pluginName].handler=eval(obj.js)(obj)),void alert("plugin loaded!")}if(fileNameLower.endsWith(".gba"))alert("This is a GBA file, redirecting to the GBA player..."),window.location.href="/gba";else if(fileNameLower.endsWith(".zip"))alert("ZIP files are not supported.\nOn iOS, you can unzip it with the built-in Files app.");else if(fileNameLower.endsWith(".3ds"))alert("No, 3DS is not supported.");else{if(fileNameLower.endsWith(".nds"))return void tryLoadROM(file);alert("Unknown file type!")}}},emuLoop(),setInterval(emuTimer33,33);var stickTouchID=null,tpadTouchID=null;function isPointInRect(e,n,i){return e>=i.x&&e<i.x+i.width&&n>=i.y&&n<i.y+i.height}function clamp01(e){return e<0?0:e>1?1:e}function handleTouch(e){if(tryInitSound(),emuIsRunning){e.preventDefault(),e.stopPropagation();for(var n=!1,i=0,t=0,o=!1,a=vkStickPos[0],r=vkStickPos[1],d=vkStickPos[2],s=vkStickPos[3],u=.4*d,l=null,c=null,f=screenCanvas[1].getBoundingClientRect(),m=0;m<emuKeyState.length;m++)emuKeyState[m]=!1;for(var v in vkState)vkState[v][1]=0;for(m=0;m<e.touches.length;m++){var p=e.touches[m],g=p.identifier;v=(h=document.elementFromPoint(p.clientX,p.clientY))?h.getAttribute("data-k"):null;if(config.useDPad){if(isPointInRect(p.clientX,p.clientY,vkDPadRect)){var E=Math.floor((p.clientX-vkDPadRect.x)/vkDPadRect.width*3)+3*Math.floor((p.clientY-vkDPadRect.y)/vkDPadRect.height*3);5==E?emuKeyState[0]=!0:3==E?emuKeyState[1]=!0:7==E?emuKeyState[2]=!0:1==E&&(emuKeyState[3]=!0)}}else if(g===stickTouchID||h==vkMap.stick&&g!=tpadTouchID){!0,vkState.stick[1]=1;var S=p.clientX,C=p.clientY;S<r-u&&(emuKeyState[1]=!0),S>r+u&&(emuKeyState[0]=!0),C<a-u&&(emuKeyState[3]=!0),C>a+u&&(emuKeyState[2]=!0),S=Math.max(r-d/2,S),S=Math.min(r+d/2,S),C=Math.max(a-s/2,C),r=S,a=C=Math.min(a+s/2,C),o=!0,l=g;continue}g===tpadTouchID||isPointInRect(p.clientX,p.clientY,f)&&!v?(n=!0,i=256*clamp01((p.clientX-f.x)/f.width),t=192*clamp01((p.clientY-f.y)/f.height),c=g):v&&(vkState[v][1]=1)}for(var v in touched=n?1:0,touchX=i,touchY=t,vkState)if(vkState[v][0]!=vkState[v][1]){var h=vkMap[v];vkState[v][0]=vkState[v][1],vkState[v][1]?"menu"==v&&uiSwitchTo("menu"):"stick"==v&&(o=!0)}for(m=0;m<emuKeyState.length;m++){v=emuKeyNames[m];vkState[v]&&vkState[v][1]&&(emuKeyState[m]=!0)}o&&(vkMap.stick.style=makeVKStyle(a-d/2,r-d/2,d,s,vkStickPos[4])),stickTouchID=l,tpadTouchID=c}}function convertKeyCode(e){for(var n=0;n<14;n++)if(e==emuKeyboradMapping[n])return n;return-1}["touchstart","touchmove","touchend","touchcancel","touchenter","touchleave"].forEach((e=>{window.addEventListener(e,handleTouch)})),window.onmousedown=window.onmouseup=window.onmousemove=e=>{if(emuIsRunning){"mousedown"==e.type&&tryInitSound();var n=screenCanvas[1].getBoundingClientRect();e.preventDefault(),e.stopPropagation();var i=0!=e.buttons&&isPointInRect(e.clientX,e.clientY,n),t=(e.clientX-n.x)/n.width*256,o=(e.clientY-n.y)/n.height*192;touched=i?1:0,touchX=t,touchY=o}},window.onresize=window.onorientationchange=()=>{uiUpdateLayout()},window.onkeydown=window.onkeyup=e=>{if(emuIsRunning){e.preventDefault();var n="keydown"===e.type,i=convertKeyCode(e.keyCode);i>=0&&(emuKeyState[i]=n),27==e.keyCode&&uiSwitchTo("menu")}};var currentConnectedGamepad=-1,gamePadKeyMap={a:1,b:0,x:3,y:2,l:4,r:5,select:8,start:9,up:12,down:13,left:14,right:15};function processGamepadInput(){if(!(currentConnectedGamepad<0)){var e=navigator.getGamepads()[currentConnectedGamepad];if(!e)return showMsg("Gamepad disconnected."),void(currentConnectedGamepad=-1);for(var n=0;n<emuKeyState.length;n++)emuKeyState[n]=!1;for(var i in gamePadKeyMap)e.buttons[gamePadKeyMap[i]].pressed&&(emuKeyState[keyNameToKeyId[i]]=!0);e.axes[0]<-.5&&(emuKeyState[keyNameToKeyId.left]=!0),e.axes[0]>.5&&(emuKeyState[keyNameToKeyId.right]=!0),e.axes[1]<-.5&&(emuKeyState[keyNameToKeyId.up]=!0),e.axes[1]>.5&&(emuKeyState[keyNameToKeyId.down]=!0)}}isSaveSupported&&window.addEventListener("gamepadconnected",(function(e){console.log("Gamepad connected at index %d: %s. %d buttons, %d axes.",e.gamepad.index,e.gamepad.id,e.gamepad.buttons.length,e.gamepad.axes.length),showMsg("Gamepad connected."),currentConnectedGamepad=e.gamepad.index,$id("a-gamepad").innerText="Gamepad connected"}));var isMicrophoneEnabled=!1,micPtr,micBuf,micScriptNode,micSource;function enableMicrophone(){micPtr||(micPtr=Module._realloc(0,4096),micBuf=Module.HEAPU8.subarray(micPtr,micPtr+4096)),micScriptNode&&micScriptNode.disconnect(),micSource&&micSource.disconnect(),tryInitSound(),isMicrophoneEnabled=!0,navigator.mediaDevices.getUserMedia({audio:!0,video:!1}).then((function(e){micSource=audioContext.createMediaStreamSource(e),micScriptNode=audioContext.createScriptProcessor(2048,1,1),micSource.connect(micScriptNode),micScriptNode.onaudioprocess=function(e){for(var n=e.inputBuffer.getChannelData(0),i=0,t=0;t<=2045;t+=3){var o=(n[t]+n[t+1]+n[t+2])/3;(o=Math.floor(64*o+64))>127?o=127:o<0&&(o=0),micBuf[i]=o,i++}Module._micWriteSamples(micPtr,682);for(var a=0;a<1;a++)for(n=e.outputBuffer.getChannelData(a),t=0;t<2048;t++)n[t]=0},micScriptNode.connect(audioContext.destination)}))}function isScreenLandscape(){return window.innerWidth/window.innerHeight>1.2}"https://ds.44670.org"==location.origin&&(isSaveSupported&&"serviceWorker"in navigator&&(navigator.serviceWorker.register("/sw.js").then((function(e){console.log("Registration succeeded. Scope is "+e.scope)})).catch((function(e){console.log("Registration failed with "+e)})),navigator.serviceWorker.addEventListener("message",(e=>{console.log("sw msg",e),e.data.msg&&($id("whats-new").innerText=e.data.msg)}))),function(){var e=0;window.onbeforeinstallprompt=function(n){if(!((e+=1)>2)){console.log("Before install prompt",n),n.preventDefault();var i=n;window.onclick=function(e){i.prompt(),window.onclick=null}}}}());var vertShaderSource="\n    precision mediump float;\n    attribute vec2 a_position; //(0,0)-(1,1)\n    varying vec2 v_texCoord; //(0,0)-(1,1)\n    \n    void main() {\n        // Convert a_position to gl_Position\n        gl_Position = vec4(a_position.x * 2.0 - 1.0, 1.0 - a_position.y * 2.0, 0, 1);\n        v_texCoord = a_position;\n    }\n",fragShaderSource="\n\n\n    \n#ifdef GL_ES\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n#define COMPAT_PRECISION mediump\n#else\n#define COMPAT_PRECISION\n#endif\n\n#if __VERSION__ >= 130\n#define COMPAT_VARYING in\n#define COMPAT_TEXTURE texture\nout COMPAT_PRECISION vec4 FragColor;\n#else\n#define COMPAT_VARYING varying\n#define FragColor gl_FragColor\n#define COMPAT_TEXTURE texture2D\n#endif\n\nprecision mediump float;\nuniform sampler2D u_image; \nvarying vec2 v_texCoord; \nuniform vec2 u_outResolution;\nuniform vec2 u_inResolution;\n\n#define Source u_image\n#define vTexCoord v_texCoord\n\n#define SourceSize vec4(u_inResolution, 1.0 / u_inResolution) \n#define OutSize vec4(u_outResolution, 1.0 / u_outResolution)\n\n#define BLEND_NONE 0\n#define BLEND_NORMAL 1\n#define BLEND_DOMINANT 2\n#define LUMINANCE_WEIGHT 1.0\n#define EQUAL_COLOR_TOLERANCE 30.0/255.0\n#define STEEP_DIRECTION_THRESHOLD 2.2\n#define DOMINANT_DIRECTION_THRESHOLD 3.6\n\nfloat DistYCbCr(vec3 pixA, vec3 pixB)\n{\n  const vec3 w = vec3(0.2627, 0.6780, 0.0593);\n  const float scaleB = 0.5 / (1.0 - w.b);\n  const float scaleR = 0.5 / (1.0 - w.r);\n  vec3 diff = pixA - pixB;\n  float Y = dot(diff.rgb, w);\n  float Cb = scaleB * (diff.b - Y);\n  float Cr = scaleR * (diff.r - Y);\n\n  return sqrt(((LUMINANCE_WEIGHT * Y) * (LUMINANCE_WEIGHT * Y)) + (Cb * Cb) + (Cr * Cr));\n}\n\nbool IsPixEqual(const vec3 pixA, const vec3 pixB)\n{\n  return (DistYCbCr(pixA, pixB) < EQUAL_COLOR_TOLERANCE);\n}\n\nfloat get_left_ratio(vec2 center, vec2 origin, vec2 direction, vec2 scale)\n{\n  vec2 P0 = center - origin;\n  vec2 proj = direction * (dot(P0, direction) / dot(direction, direction));\n  vec2 distv = P0 - proj;\n  vec2 orth = vec2(-direction.y, direction.x);\n  float side = sign(dot(P0, orth));\n  float v = side * length(distv * scale);\n\n//  return step(0, v);\n  return smoothstep(-sqrt(2.0)/2.0, sqrt(2.0)/2.0, v);\n}\n\n#define eq(a,b)  (a == b)\n#define neq(a,b) (a != b)\n\n#define P(x,y) COMPAT_TEXTURE(Source, coord + SourceSize.zw * vec2(x, y)).rgb\n\nvoid main()\n{\n  //---------------------------------------\n  // Input Pixel Mapping:  -|x|x|x|-\n  //                       x|A|B|C|x\n  //                       x|D|E|F|x\n  //                       x|G|H|I|x\n  //                       -|x|x|x|-\n\n  vec2 scale = OutSize.xy * SourceSize.zw;\n  vec2 pos = fract(vTexCoord * SourceSize.xy) - vec2(0.5, 0.5);\n  vec2 coord = vTexCoord - pos * SourceSize.zw;\n\n  vec3 A = P(-1.,-1.);\n  vec3 B = P( 0.,-1.);\n  vec3 C = P( 1.,-1.);\n  vec3 D = P(-1., 0.);\n  vec3 E = P( 0., 0.);\n  vec3 F = P( 1., 0.);\n  vec3 G = P(-1., 1.);\n  vec3 H = P( 0., 1.);\n  vec3 I = P( 1., 1.);\n\n  // blendResult Mapping: x|y|\n  //                      w|z|\n  ivec4 blendResult = ivec4(BLEND_NONE,BLEND_NONE,BLEND_NONE,BLEND_NONE);\n\n  // Preprocess corners\n  // Pixel Tap Mapping: -|-|-|-|-\n  //                    -|-|B|C|-\n  //                    -|D|E|F|x\n  //                    -|G|H|I|x\n  //                    -|-|x|x|-\n  if (!((eq(E,F) && eq(H,I)) || (eq(E,H) && eq(F,I))))\n  {\n    float dist_H_F = DistYCbCr(G, E) + DistYCbCr(E, C) + DistYCbCr(P(0,2), I) + DistYCbCr(I, P(2.,0.)) + (4.0 * DistYCbCr(H, F));\n    float dist_E_I = DistYCbCr(D, H) + DistYCbCr(H, P(1,2)) + DistYCbCr(B, F) + DistYCbCr(F, P(2.,1.)) + (4.0 * DistYCbCr(E, I));\n    bool dominantGradient = (DOMINANT_DIRECTION_THRESHOLD * dist_H_F) < dist_E_I;\n    blendResult.z = ((dist_H_F < dist_E_I) && neq(E,F) && neq(E,H)) ? ((dominantGradient) ? BLEND_DOMINANT : BLEND_NORMAL) : BLEND_NONE;\n  }\n\n\n  // Pixel Tap Mapping: -|-|-|-|-\n  //                    -|A|B|-|-\n  //                    x|D|E|F|-\n  //                    x|G|H|I|-\n  //                    -|x|x|-|-\n  if (!((eq(D,E) && eq(G,H)) || (eq(D,G) && eq(E,H))))\n  {\n    float dist_G_E = DistYCbCr(P(-2.,1.)  , D) + DistYCbCr(D, B) + DistYCbCr(P(-1.,2.), H) + DistYCbCr(H, F) + (4.0 * DistYCbCr(G, E));\n    float dist_D_H = DistYCbCr(P(-2.,0.)  , G) + DistYCbCr(G, P(0.,2.)) + DistYCbCr(A, E) + DistYCbCr(E, I) + (4.0 * DistYCbCr(D, H));\n    bool dominantGradient = (DOMINANT_DIRECTION_THRESHOLD * dist_D_H) < dist_G_E;\n    blendResult.w = ((dist_G_E > dist_D_H) && neq(E,D) && neq(E,H)) ? ((dominantGradient) ? BLEND_DOMINANT : BLEND_NORMAL) : BLEND_NONE;\n  }\n\n  // Pixel Tap Mapping: -|-|x|x|-\n  //                    -|A|B|C|x\n  //                    -|D|E|F|x\n  //                    -|-|H|I|-\n  //                    -|-|-|-|-\n  if (!((eq(B,C) && eq(E,F)) || (eq(B,E) && eq(C,F))))\n  {\n    float dist_E_C = DistYCbCr(D, B) + DistYCbCr(B, P(1.,-2.)) + DistYCbCr(H, F) + DistYCbCr(F, P(2.,-1.)) + (4.0 * DistYCbCr(E, C));\n    float dist_B_F = DistYCbCr(A, E) + DistYCbCr(E, I) + DistYCbCr(P(0.,-2.), C) + DistYCbCr(C, P(2.,0.)) + (4.0 * DistYCbCr(B, F));\n    bool dominantGradient = (DOMINANT_DIRECTION_THRESHOLD * dist_B_F) < dist_E_C;\n    blendResult.y = ((dist_E_C > dist_B_F) && neq(E,B) && neq(E,F)) ? ((dominantGradient) ? BLEND_DOMINANT : BLEND_NORMAL) : BLEND_NONE;\n  }\n\n  // Pixel Tap Mapping: -|x|x|-|-\n  //                    x|A|B|C|-\n  //                    x|D|E|F|-\n  //                    -|G|H|-|-\n  //                    -|-|-|-|-\n  if (!((eq(A,B) && eq(D,E)) || (eq(A,D) && eq(B,E))))\n  {\n    float dist_D_B = DistYCbCr(P(-2.,0.), A) + DistYCbCr(A, P(0.,-2.)) + DistYCbCr(G, E) + DistYCbCr(E, C) + (4.0 * DistYCbCr(D, B));\n    float dist_A_E = DistYCbCr(P(-2.,-1.), D) + DistYCbCr(D, H) + DistYCbCr(P(-1.,-2.), B) + DistYCbCr(B, F) + (4.0 * DistYCbCr(A, E));\n    bool dominantGradient = (DOMINANT_DIRECTION_THRESHOLD * dist_D_B) < dist_A_E;\n    blendResult.x = ((dist_D_B < dist_A_E) && neq(E,D) && neq(E,B)) ? ((dominantGradient) ? BLEND_DOMINANT : BLEND_NORMAL) : BLEND_NONE;\n  }\n\n  vec3 res = E;\n\n  // Pixel Tap Mapping: -|-|-|-|-\n  //                    -|-|B|C|-\n  //                    -|D|E|F|x\n  //                    -|G|H|I|x\n  //                    -|-|x|x|-\n  if(blendResult.z != BLEND_NONE)\n  {\n    float dist_F_G = DistYCbCr(F, G);\n    float dist_H_C = DistYCbCr(H, C);\n    bool doLineBlend = (blendResult.z == BLEND_DOMINANT ||\n                !((blendResult.y != BLEND_NONE && !IsPixEqual(E, G)) || (blendResult.w != BLEND_NONE && !IsPixEqual(E, C)) ||\n                  (IsPixEqual(G, H) && IsPixEqual(H, I) && IsPixEqual(I, F) && IsPixEqual(F, C) && !IsPixEqual(E, I))));\n\n    vec2 origin = vec2(0.0, 1.0 / sqrt(2.0));\n    vec2 direction = vec2(1.0, -1.0);\n    if(doLineBlend)\n    {\n      bool haveShallowLine = (STEEP_DIRECTION_THRESHOLD * dist_F_G <= dist_H_C) && neq(E,G) && neq(D,G);\n      bool haveSteepLine = (STEEP_DIRECTION_THRESHOLD * dist_H_C <= dist_F_G) && neq(E,C) && neq(B,C);\n      origin = haveShallowLine? vec2(0.0, 0.25) : vec2(0.0, 0.5);\n      direction.x += haveShallowLine? 1.0: 0.0;\n      direction.y -= haveSteepLine? 1.0: 0.0;\n    }\n\n    vec3 blendPix = mix(H,F, step(DistYCbCr(E, F), DistYCbCr(E, H)));\n    res = mix(res, blendPix, get_left_ratio(pos, origin, direction, scale));\n  }\n\n  // Pixel Tap Mapping: -|-|-|-|-\n  //                    -|A|B|-|-\n  //                    x|D|E|F|-\n  //                    x|G|H|I|-\n  //                    -|x|x|-|-\n  if(blendResult.w != BLEND_NONE)\n  {\n    float dist_H_A = DistYCbCr(H, A);\n    float dist_D_I = DistYCbCr(D, I);\n    bool doLineBlend = (blendResult.w == BLEND_DOMINANT ||\n                !((blendResult.z != BLEND_NONE && !IsPixEqual(E, A)) || (blendResult.x != BLEND_NONE && !IsPixEqual(E, I)) ||\n                  (IsPixEqual(A, D) && IsPixEqual(D, G) && IsPixEqual(G, H) && IsPixEqual(H, I) && !IsPixEqual(E, G))));\n\n    vec2 origin = vec2(-1.0 / sqrt(2.0), 0.0);\n    vec2 direction = vec2(1.0, 1.0);\n    if(doLineBlend)\n    {\n      bool haveShallowLine = (STEEP_DIRECTION_THRESHOLD * dist_H_A <= dist_D_I) && neq(E,A) && neq(B,A);\n      bool haveSteepLine  = (STEEP_DIRECTION_THRESHOLD * dist_D_I <= dist_H_A) && neq(E,I) && neq(F,I);\n      origin = haveShallowLine? vec2(-0.25, 0.0) : vec2(-0.5, 0.0);\n      direction.y += haveShallowLine? 1.0: 0.0;\n      direction.x += haveSteepLine? 1.0: 0.0;\n    }\n    origin = origin;\n    direction = direction;\n\n    vec3 blendPix = mix(H,D, step(DistYCbCr(E, D), DistYCbCr(E, H)));\n    res = mix(res, blendPix, get_left_ratio(pos, origin, direction, scale));\n  }\n\n  // Pixel Tap Mapping: -|-|x|x|-\n  //                    -|A|B|C|x\n  //                    -|D|E|F|x\n  //                    -|-|H|I|-\n  //                    -|-|-|-|-\n  if(blendResult.y != BLEND_NONE)\n  {\n    float dist_B_I = DistYCbCr(B, I);\n    float dist_F_A = DistYCbCr(F, A);\n    bool doLineBlend = (blendResult.y == BLEND_DOMINANT ||\n                !((blendResult.x != BLEND_NONE && !IsPixEqual(E, I)) || (blendResult.z != BLEND_NONE && !IsPixEqual(E, A)) ||\n                  (IsPixEqual(I, F) && IsPixEqual(F, C) && IsPixEqual(C, B) && IsPixEqual(B, A) && !IsPixEqual(E, C))));\n\n    vec2 origin = vec2(1.0 / sqrt(2.0), 0.0);\n    vec2 direction = vec2(-1.0, -1.0);\n\n    if(doLineBlend)\n    {\n      bool haveShallowLine = (STEEP_DIRECTION_THRESHOLD * dist_B_I <= dist_F_A) && neq(E,I) && neq(H,I);\n      bool haveSteepLine  = (STEEP_DIRECTION_THRESHOLD * dist_F_A <= dist_B_I) && neq(E,A) && neq(D,A);\n      origin = haveShallowLine? vec2(0.25, 0.0) : vec2(0.5, 0.0);\n      direction.y -= haveShallowLine? 1.0: 0.0;\n      direction.x -= haveSteepLine? 1.0: 0.0;\n    }\n\n    vec3 blendPix = mix(F,B, step(DistYCbCr(E, B), DistYCbCr(E, F)));\n    res = mix(res, blendPix, get_left_ratio(pos, origin, direction, scale));\n  }\n\n  // Pixel Tap Mapping: -|x|x|-|-\n  //                    x|A|B|C|-\n  //                    x|D|E|F|-\n  //                    -|G|H|-|-\n  //                    -|-|-|-|-\n  if(blendResult.x != BLEND_NONE)\n  {\n    float dist_D_C = DistYCbCr(D, C);\n    float dist_B_G = DistYCbCr(B, G);\n    bool doLineBlend = (blendResult.x == BLEND_DOMINANT ||\n                !((blendResult.w != BLEND_NONE && !IsPixEqual(E, C)) || (blendResult.y != BLEND_NONE && !IsPixEqual(E, G)) ||\n                  (IsPixEqual(C, B) && IsPixEqual(B, A) && IsPixEqual(A, D) && IsPixEqual(D, G) && !IsPixEqual(E, A))));\n\n    vec2 origin = vec2(0.0, -1.0 / sqrt(2.0));\n    vec2 direction = vec2(-1.0, 1.0);\n    if(doLineBlend)\n    {\n      bool haveShallowLine = (STEEP_DIRECTION_THRESHOLD * dist_D_C <= dist_B_G) && neq(E,C) && neq(F,C);\n      bool haveSteepLine  = (STEEP_DIRECTION_THRESHOLD * dist_B_G <= dist_D_C) && neq(E,G) && neq(H,G);\n      origin = haveShallowLine? vec2(0.0, -0.25) : vec2(0.0, -0.5);\n      direction.x -= haveShallowLine? 1.0: 0.0;\n      direction.y += haveSteepLine? 1.0: 0.0;\n    }\n\n    vec3 blendPix = mix(D,B, step(DistYCbCr(E, B), DistYCbCr(E, D)));\n    res = mix(res, blendPix, get_left_ratio(pos, origin, direction, scale));\n  }\n\n \tFragColor = vec4(res, 1.0);\n} ";function gpuInitWithCanvas(e){var n=e.getContext("webgl");if(e.gl=n,!n)return alert("Unable to initialize WebGL. Your browser or machine may not support it."),null;n.viewport(0,0,e.width,e.height),program=n.createProgram();var i=n.createShader(n.VERTEX_SHADER),t=n.createShader(n.FRAGMENT_SHADER);if(n.shaderSource(i,vertShaderSource),n.shaderSource(t,fragShaderSource),n.compileShader(i),n.compileShader(t),n.getShaderParameter(i,n.COMPILE_STATUS))if(n.getShaderParameter(t,n.COMPILE_STATUS)){if(n.attachShader(program,i),n.attachShader(program,t),n.linkProgram(program),n.getProgramParameter(program,n.LINK_STATUS)){n.useProgram(program);var o=n.createTexture();n.bindTexture(n.TEXTURE_2D,o),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n.NEAREST),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,n.NEAREST);var a=new Float32Array([0,0,1,0,0,1,0,1,1,0,1,1]),r=n.createBuffer();n.bindBuffer(n.ARRAY_BUFFER,r),n.bufferData(n.ARRAY_BUFFER,a,n.STATIC_DRAW);var d=n.getAttribLocation(program,"a_position");n.enableVertexAttribArray(d),n.vertexAttribPointer(d,2,n.FLOAT,!1,0,0),e.outResolutionUniformLocation=n.getUniformLocation(program,"u_outResolution");var s=n.getUniformLocation(program,"u_inResolution");return n.uniform2f(s,256,192),n}alert("Error in program: "+n.getProgramInfoLog(program))}else alert("Error in fragment shader: "+n.getShaderInfoLog(t));else alert("Error in vertex shader: "+n.getShaderInfoLog(i))}function gpuDraw(e,n){var i=e.gl;i.texImage2D(i.TEXTURE_2D,0,i.RGBA,i.RGBA,i.UNSIGNED_BYTE,n),i.viewport(0,0,e.width,e.height),i.uniform2f(e.outResolutionUniformLocation,e.width,e.height),i.drawArrays(i.TRIANGLES,0,6)}function gpuInit(){gpuInitWithCanvas(screenCanvas[0])&&gpuInitWithCanvas(screenCanvas[1])}